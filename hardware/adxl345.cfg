#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  ADXL345 Resonance Testing Setup
# https://www.reddit.com/r/klippers/comments/sn2gsv/anyone_got_any_weird_alternative_boards_that_can/
#-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None
#axes_map: -z,y,x

[resonance_tester]
accel_chip: adxl345
probe_points:
    0, 0, 20  # an example

# For Resonance Testing using Arduino UNO to rPi via USB cable.
#
# NB! Use KIAUH for installing, not below!!!!
# 
# rPi software setup:
#   https://www.klipper3d.org/Measuring_Resonances.html
# Arduino software setup: 
#   https://www.klipper3d.org/Installation.html#building-and-flashing-the-micro-controller
#
# Be sure to change serial address below as per output of 'ls /dev/serial/by-id/*'
# Wire the Arduino / ADXL345 as follows:
# ADXL345      ARDUINO
#   CS ------- 10/PB2
#   SD0 ------ 12/PB4
#   SDA ------ 11/PB3
#   SCL ------ 13/PB5
#
# Shutdown rPi and power off printer. Connect Arduino to rPi via USB cable, attach ADXL345 to toolhead.
# Power-on printer, uncomment the following lines, restart printer. Open terminal, run G32, then
# SHAPER_CALIBRATE, and when done, SAVE_CONFIG to save found settings.

# ADX345
#[mcu uno]
#serial: /dev/serial/by-id/usb-Arduino__www.arduino.cc__Arduino_Uno_553303438313518171D1-if00
#restart_method: command

#[adxl345]
#cs_pin: uno:PB2
#   The accelerometer axis for each of the printer's X, Y, and Z axes.
#   This may be useful if the accelerometer is mounted in an
#   orientation that does not match the printer orientation. For
#   example, one could set this to "y, x, z" to swap the X and Y axes.
#   It is also possible to negate an axis if the accelerometer
#   direction is reversed (eg, "x, z, -y"). The default is "x, y, z".
#axes_map: -x, -y, z

#[resonance_tester]
#accel_chip: adxl345
#   Maximum frequency to test for resonances. The default is 133.33 Hz.
#max_freq: 133.33
#probe_points:  0, 0, 20  # an example
