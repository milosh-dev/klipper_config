############################################
# My printer filament commands
# 
# Raoul Lattemae
# 
# Based on:
#   https://www.reddit.com/r/klippers/comments/m57iai/mom_my_overpowered_m600_command/
# 
# v1.0 - 10.04.2022
############################################

################################################################################
# M876
# Handles prompt response (to communicate with Klipper)

# Point on selles, et olen korduvalt kriipinud printeri plaati, sest
# probe on jäänud sisse.
################################################################################
[gcode_macro M876]
variable_myjob: 0
gcode:
	{% set S = params.S|default(-1)|int %}
	{% set myjob = printer["gcode_macro STATE_MACHINE"].job %}
	{% if  myjob != 0 %}
		
		# Previous
		{% if S == 1 %} 
		    {% set myjob = myjob - 1 %}	
		
		# Next
        {% elif S == 2%}
		    {% set myjob = myjob + 1 %}	
        
		# Skip
        {% elif S == 3%}
		    {% set myjob = myjob + 2 %}	
        
        # OK
        {% elif S == 4%}
		    {% set myjob = myjob + 1 %}	

        # Cancel
        {% else %}
		    {% set myjob = 0 %}	
        {% endif %}
          
	{% endif %}
	
    #RESPOND TYPE=echo MSG="Nyyd: {myjob} "
    STATE_MACHINE NEWJOB={myjob}

################################################################################
# M876 Buttons
# Handles movement between steps
################################################################################
[gcode_macro PREVIOUS]
gcode:
     M876 S1 
[gcode_macro EDASI]
gcode:
     M876 S2
[gcode_macro SKIP]
gcode:
     M876 S3
[gcode_macro OK]
gcode:
     M876 S4
[gcode_macro CANCEL]
gcode:
     M876 S5

################################################################################
# STATE_MACHINE
# Handles jobs that require step-by-step approach
################################################################################
[gcode_macro STATE_MACHINE]
variable_job: 0
variable_myjob: 0
gcode:
   
    # Set a job status to the entered number
	{% set myjob = params.NEWJOB|default(0)|int %}

    # RESPOND TYPE=echo MSG="Job: {myjob} "
	# Continue only if myjob is not zero. Otherwise stop processing state machine
	{% if myjob != 0 %}

        # START PRINTING STATE MACHINE
        # {% if myjob > 0 and myjob < 200 %}
        #    NOTIFY MSG="JOB: {myjob}"
        # {% endif %}
        
        # START PRINT STATE MACHINE
        {% if myjob == 100 %}
            # Prompt for next step
        	M117 Filament change
        	RESPOND TYPE=command MSG="========================================"
        	RESPOND TYPE=command MSG=" Click OK to start calibration. "
        	RESPOND TYPE=command MSG=" Click SKIP to skip."
        	RESPOND TYPE=command MSG=" Should we calibrate Bed Mesh? "
        	RESPOND TYPE=command MSG=" ---------  Bed Mesh calibrate  ------- "
        	RESPOND TYPE=command MSG="========================================"
        {% endif %}

        # OK clicked, continue with bed mesh probe
        {% if myjob == 101 %}
            # Prompt for next step
        	DEPLOY_PROBE NEXTJOB=103
        {% endif %}
        
        # Skip clicked, check that probe is stowed
        {% if myjob == 102 %}
            # Prompt for next step
        	STOW_PROBE NEXTJOB=104
        {% endif %}

        # Continue with bed mesh calibration
        {% if myjob == 103 %}
            {% set radius = printer["gcode_macro START_PRINT"].radius %}
            {% set x = printer["gcode_macro START_PRINT"].x %}
            {% set y = printer["gcode_macro START_PRINT"].y %}
            # Prompt for next step
        	BED_MESH_CALIBRATE PROFILE=printing MESH_RADIUS={radius} MESH_ORIGIN={x},{y}
        	# Wait for user input
        	M117 Click LCD button when calibrated        	
        	M0
        	BED_MESH_PROFILE LOAD=printing
        	# Continue with Stowing probe
        	# KOJU
        	myjob = 102
        {% endif %}

        # Continue with bed mesh calibration
        {% if myjob == 104 %}
            # Start printing
                # Heat up
            M140 S{bed}                     # Set bed temperature
            M104 S{extruder}                # Set hotend temperature
            M105                            # Report temperatures
            M190 S{bed}                     # Wait for bed temperature
            M109 S{extruder}                # Wait for hotend temperature
    
            # Wipe
            # G1 X0 Y124 Z0.2 F6000
            # G2 X124 Y0 Z0.2 E40 I0 J-124 F500
 
            G92 E0                          # Zero the extruder
        {% endif %}

        # START RECALIBRATION STATE MACHINE
        {% if myjob == 200 %}
            PROBE_CALIBRATE         # Calibrate probe
        {% endif %}


        # CHANGE FILAMENT STATE MACHINE
        # 600 Starts filament change
        {% if myjob == 600 %}
            # Save extruder temperature
            SET_GCODE_VARIABLE MACRO=M600 VARIABLE=temp VALUE={printer.extruder.target}
            PAUSE E=0      # Pause printing. Note that this uses macro-based PAUSE code and we don't need to retract
            
            # Cool Hotend for security reasons
            M104 S0
            
            # Set idle timeout to 2h
            SET_IDLE_TIMEOUT TIMEOUT=7200
            
            # Prompot for next step
        	M117 Filament change
        	RESPOND TYPE=command MSG="========================================"
        	RESPOND TYPE=command MSG=" Click OK to heat up (again) and unload filament. "
        	RESPOND TYPE=command MSG=" Click SKIP to resume printing."
        	RESPOND TYPE=command MSG=" Note that extruder temp set to 0 for security reasons. "
        	RESPOND TYPE=command MSG=" ----------  Filament change ---------- "
        	RESPOND TYPE=command MSG="========================================"
            
        #   PROMPT FOR FILAMENT UNLOAD [PREVIOUS -> RETURN PRINTING, CANCEL -> CANCEL PRINTING, NEXT -> UNLOAD FILAMENT
        # 
        {% endif %}

        # 602 Skip filament change
        {% if myjob == 602 %}
        	M117 Resume printing
            # Restore extruder temperature
            M109 S{printer["gcode_macro M600"].temp}
            M104 S{printer["gcode_macro M600"].temp}
            
            # Reset myjob value
            {% set myjob = 0 %}

            # Resume printing
            RESUME E=0
        {% endif %}

        # 601 Continue with filament change
        {% if myjob == 601 %}
            {% set myjob = 602 %}
        	M117 Unloading filament
            UNLOAD_FILAMENT
        	M117 Waiting for load
            
            #   COOL HOTEND TO ZERO JUST FOR SECURITY REASONS
        	RESPOND TYPE=command MSG="========================================"
        	RESPOND TYPE=command MSG=" Load the new filament into extruder and click EDASI."
        	RESPOND TYPE=command MSG=" Click UNLOAD_MORE if filament didn't unload completely."
        	RESPOND TYPE=command MSG=" -------   Filament unloaded    ------- "
        	RESPOND TYPE=command MSG="========================================"

        {% endif %}

        # 601 Continue with filament change
        {% if myjob == 603 %}
            {% set myjob = 601 %}
        	M117 Loading filament
            LOAD_FILAMENT
        	M117 Waiting for resume
            
            #   COOL HOTEND TO ZERO JUST FOR SECURITY REASONS
        	RESPOND TYPE=command MSG="========================================"
        	RESPOND TYPE=command MSG=" Click OK to resume printing. "
        	RESPOND TYPE=command MSG=" Click PREVIOUS to start change filament over again."
        	RESPOND TYPE=command MSG=" -------   Filament loaded    ------- "
        	RESPOND TYPE=command MSG="========================================"

        {% endif %}        
        
    {% else %}
        # Job is canceled
        RESPOND TYPE=error MSG="Process canceled."
	{% endif %}

    # My console is running backwards therefore it has to be here 
    # RESPOND TYPE=echo MSG="Job: {myjob} "
	
    # We need to share the state with other commands
    SET_GCODE_VARIABLE MACRO=STATE_MACHINE VARIABLE=job VALUE={myjob}

