    ##  Replaces the M557 command in the start GCODE so that the bounds are filled in.
    #   \param data The entire start GCODE block.
    #   \return The same GCODE but with the bounds of the mesh filled in.
    def fillBounds(self, data: str, bounds: {str: {str: float}}) -> str:
        # Fill in the level command template
        new_cmd = "M557 X%.3f:%.3f Y%.3f:%.3f S%.3f ; Leveling mesh defined by LevelingMeshOptimizer" % (
            bounds["X"]["min"], bounds["X"]["max"],
            bounds["Y"]["min"], bounds["Y"]["max"],
            self.getSettingValueByKey("spacing"),
        )
        
        x_min = bounds["X"]["min"]
        x_max = bounds["X"]["max"]
        y_min = bounds["Y"]["min"]
        y_max = bounds["Y"]["max"]
        
        center_x = mean(x_min, x_max)
        center_y = mean(y_min, y_max)
        radius = sqrt((x_max-x_min)^2/4 + (y_max-y_min)^2/4)
        
        delta_cmd = "LOCAL_MESH X=%.3f Y=%.3f R=%.3f    ; Leveling mesh for a print" % (
            center_x, center_y, radius
        )

        # Replace M557 command in GCODE
        return re.sub(r"^M557 .*$", new_cmd, data, flags=re.MULTILINE)
        #return re.sub(r"^LOCAL_MESH .*$", delta_cmd, data, flags=re.MULTILINE)
